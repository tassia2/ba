// Copyright (C) 2011-2021 Vincent Heuveline
//
// HiFlow3 is free software: you can redistribute it and/or modify it under the
// terms of the European Union Public Licence (EUPL) v1.2 as published by the
// European Union or (at your option) any later version.
//
// HiFlow3 is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the European Union Public Licence (EUPL) v1.2 for
// more details.
//
// You should have received a copy of the European Union Public Licence (EUPL)
// v1.2 along with HiFlow3.  If not, see
// <https://joinup.ec.europa.eu/page/eupl-text-11-12>.

/// \author Staffan Ronnas

#include "quadrature/qgaussline.h"

namespace hiflow {

template < class DataType >
QuadratureGaussLine< DataType >::QuadratureGaussLine()
    : QuadratureType< DataType >::QuadratureType() {
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // Implemented sizes: (please fill up if a new size was added)
  // 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
  // 22, 23, 24, 25, 26, 27, 28, 29, 30
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  int total_number_of_quadratures = 30;

  int cntr = 0;
  int size = 0;

  // Create order->size map.
  order_size_map_.clear();
  order_size_map_.resize(60);
  order_size_map_[0] = 1;
  order_size_map_[1] = 1;
  order_size_map_[2] = 2;
  order_size_map_[3] = 2;
  order_size_map_[4] = 3;
  order_size_map_[5] = 3;
  order_size_map_[6] = 4;
  order_size_map_[7] = 4;
  order_size_map_[8] = 5;
  order_size_map_[9] = 5;

  order_size_map_[10] = 6;
  order_size_map_[11] = 6;
  order_size_map_[12] = 7;
  order_size_map_[13] = 7;
  order_size_map_[14] = 8;
  order_size_map_[15] = 8;
  order_size_map_[16] = 9;
  order_size_map_[17] = 9;
  order_size_map_[18] = 10;
  order_size_map_[19] = 10;

  order_size_map_[20] = 11;
  order_size_map_[21] = 11;
  order_size_map_[22] = 12;
  order_size_map_[23] = 12;
  order_size_map_[24] = 13;
  order_size_map_[25] = 13;
  order_size_map_[26] = 14;
  order_size_map_[27] = 14;
  order_size_map_[28] = 15;
  order_size_map_[29] = 15;

  order_size_map_[30] = 16;
  order_size_map_[31] = 16;
  order_size_map_[32] = 17;
  order_size_map_[33] = 17;
  order_size_map_[34] = 18;
  order_size_map_[35] = 18;
  order_size_map_[36] = 19;
  order_size_map_[37] = 19;
  order_size_map_[38] = 20;
  order_size_map_[39] = 20;

  order_size_map_[40] = 21;
  order_size_map_[41] = 21;
  order_size_map_[42] = 22;
  order_size_map_[43] = 22;
  order_size_map_[44] = 23;
  order_size_map_[45] = 23;
  order_size_map_[46] = 24;
  order_size_map_[47] = 24;
  order_size_map_[48] = 25;
  order_size_map_[49] = 25;

  order_size_map_[50] = 26;
  order_size_map_[51] = 26;
  order_size_map_[52] = 27;
  order_size_map_[53] = 27;
  order_size_map_[54] = 28;
  order_size_map_[55] = 28;
  order_size_map_[56] = 29;
  order_size_map_[57] = 29;
  order_size_map_[58] = 30;
  order_size_map_[59] = 30;

  // First resize vector fields to the number of implemented quadratures
  x_.resize(total_number_of_quadratures);
  y_.resize(total_number_of_quadratures);
  z_.resize(total_number_of_quadratures);
  w_.resize(total_number_of_quadratures);

  // Next fill vector fields with quadrature data

  // ---------------------------------------------
  size = 1;

  DataType x1[] = {.5};
  DataType w1[] = {1.0};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x1, x1 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w1, w1 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 2;

  DataType x2[] = {.211324865405187117745425609748,
                   .788675134594812882254574390252};
  DataType w2[] = {.5, .5};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x2, x2 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w2, w2 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 3;

  DataType x3[] = {.112701665379258311482073460022, .5,
                   .887298334620741688517926539978};
  DataType w3[] = {.277777777777777777777777777779,
                   .444444444444444444444444444445,
                   .277777777777777777777777777779};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x3, x3 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w3, w3 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 4;

  DataType x4[] = {
      .069431844202973712388026755553, .330009478207571867598667120448,
      .669990521792428132401332879552, .930568155797026287611973244447};
  DataType w4[] = {
      .173927422568726928686531974611, .326072577431273071313468025388,
      .326072577431273071313468025388, .173927422568726928686531974611};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x4, x4 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w4, w4 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 5;

  DataType x5[] = {
      .046910077030668003601186560850, .23076534494715845448184278965, .5,
      .76923465505284154551815721035, .95308992296933199639881343915};
  DataType w5[] = {
      .118463442528094543757132020362, .239314335249683234020645757416,
      .284444444444444444444444444445, .239314335249683234020645757416,
      .118463442528094543757132020362};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x5, x5 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w5, w5 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 6;

  DataType x6[] = {
      .033765242898423986093849222756, .169395306766867743169300202489,
      .380690406958401545684749139159, .619309593041598454315250860841,
      .830604693233132256830699797511, .966234757101576013906150777244};
  DataType w6[] = {
      .085662246189585172520148071111, .180380786524069303784916756904,
      .233956967286345523694935171995, .233956967286345523694935171995,
      .180380786524069303784916756904, .085662246189585172520148071111};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x6, x6 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w6, w6 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 7;

  DataType x7[] = {
      .025446043828620737736905157977, .12923440720030278006806761336,
      .297077424311301416546696793961, .5,
      .702922575688698583453303206039, .87076559279969721993193238664,
      .974553956171379262263094842023};
  DataType w7[] = {
      .064742483084434846635305716358, .139852695744638333950733885707,
      .190915025252559472475184887747, .208979591836734693877551020408,
      .190915025252559472475184887747, .139852695744638333950733885707,
      .064742483084434846635305716358};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x7, x7 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w7, w7 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 8;

  DataType x8[] = {
      .019855071751231884158219565716, .101666761293186630204223031762,
      .237233795041835507091130475406, .408282678752175097530261928822,
      .591717321247824902469738071178, .762766204958164492908869524594,
      .898333238706813369795776968238, .980144928248768115841780434284};
  DataType w8[] = {
      .050614268145188129576265677161, .111190517226687235272177997216,
      .156853322938943643668981100988, .18134189168918099148257522464,
      .18134189168918099148257522464,  .156853322938943643668981100988,
      .111190517226687235272177997216, .050614268145188129576265677161};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x8, x8 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w8, w8 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 9;

  DataType x9[] = {.015919880246186955082211898548,
                   .081984446336682102850285105965,
                   .193314283649704801345648980329,
                   .337873288298095535480730992679,
                   .5,
                   .662126711701904464519269007321,
                   .806685716350295198654351019671,
                   .918015553663317897149714894035,
                   .984080119753813044917788101452};
  DataType w9[] = {
      .040637194180787205985946079062, .090324080347428702029236015625,
      .130305348201467731159371434718, .156173538520001420034315203291,
      .165119677500629881582262534644, .156173538520001420034315203291,
      .130305348201467731159371434718, .090324080347428702029236015625,
      .040637194180787205985946079062};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x9, x9 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w9, w9 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 10;

  DataType x10[] = {
      .013046735741414139961017993958, .067468316655507744633951655788,
      .160295215850487796882836317442, .283302302935376404600367028417,
      .425562830509184394557586999435, .574437169490815605442413000565,
      .716697697064623595399632971583, .839704784149512203117163682558,
      .932531683344492255366048344212, .986953264258585860038982006042};
  DataType w10[] = {
      .0333356721543440687967844048950, .0747256745752902965728881698850,
      .109543181257991021997767467126,  .134633359654998177545613460784,
      .147762112357376435086946497326,  .147762112357376435086946497326,
      .134633359654998177545613460784,  .109543181257991021997767467126,
      .0747256745752902965728881698850, .0333356721543440687967844048950};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x10, x10 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w10, w10 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 11;

  DataType x11[] = {
      .010885670926971503598030999438, .056468700115952350462421115348,
      .134923997212975337953291873984, .240451935396594092037137165270,
      .365228422023827513834234007299, .5,
      .634771577976172486165765992701, .759548064603405907962862834730,
      .865076002787024662046708126016, .943531299884047649537578884652,
      .989114329073028496401969000562};
  DataType w11[] = {
      .0278342835580868332413768601148, .0627901847324523123173471498315,
      .0931451054638671257130488207810, .116596882295995239959261852412,
      .131402272255123331090344434948,  .136462543388950315357241764168,
      .131402272255123331090344434948,  .116596882295995239959261852412,
      .0931451054638671257130488207810, .0627901847324523123173471498315,
      .0278342835580868332413768601148};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x11, x11 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w11, w11 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 12;

  DataType x12[] = {
      .009219682876640374654725454925, .047941371814762571660767066940,
      .115048662902847656481553083393, .206341022856691276351648790529,
      .316084250500909903123654231678, .437383295744265542263779315268,
      .562616704255734457736220684732, .683915749499090096876345768322,
      .793658977143308723648351209471, .884951337097152343518446916607,
      .952058628185237428339232933060, .990780317123359625345274545075};
  DataType w12[] = {
      .0235876681932559135973079808979, .0534696629976592154801273590260,
      .0800391642716731131673262646270, .101583713361532960874532227889,
      .116746268269177404380424949464,  .124573522906701392500281218021,
      .124573522906701392500281218021,  .116746268269177404380424949464,
      .101583713361532960874532227889,  .0800391642716731131673262646270,
      .0534696629976592154801273590260, .0235876681932559135973079808979};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x12, x12 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w12, w12 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 13;

  DataType x13[] = {.007908472640705925263585275596,
                    .041200800388511017396726081749,
                    .099210954633345043602896755208,
                    .178825330279829889678007696502,
                    .275753624481776573561043573936,
                    .384770842022432602967235939451,
                    .5,
                    .615229157977567397032764060549,
                    .724246375518223426438956426064,
                    .821174669720170110321992303498,
                    .900789045366654956397103244792,
                    .958799199611488982603273918251,
                    .992091527359294074736414724404};
  DataType w13[] = {
      .0202420023826579397600107964706, .0460607499188642239572108885002,
      .0694367551098936192318008890105, .0890729903809728691400233461840,
      .103908023768444251156261609634,  .113141590131448619206045093020,
      .116275776615436955097294757635,  .113141590131448619206045093020,
      .103908023768444251156261609634,  .0890729903809728691400233461840,
      .0694367551098936192318008890105, .0460607499188642239572108885002,
      .0202420023826579397600107964706};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x13, x13 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w13, w13 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 14;

  DataType x14[] = {
      .006858095651593830579201366648, .035782558168213241331804430311,
      .086399342465117503405102628675, .156353547594157264925990098490,
      .242375681820922954017354640724, .340443815536055119782164087916,
      .445972525646328168966877674890, .554027474353671831033122325110,
      .659556184463944880217835912084, .757624318179077045982645359276,
      .843646452405842735074009901510, .913600657534882496594897371325,
      .964217441831786758668195569689, .993141904348406169420798633352};
  DataType w14[] = {
      .0175597301658759315159164387279, .0400790435798801049028166394764,
      .0607592853439515923447074066035, .0786015835790967672848009696255,
      .0927691987389689068708582949900, .102599231860647801982962032827,
      .107631926731578895097938221659,  .107631926731578895097938221659,
      .102599231860647801982962032827,  .0927691987389689068708582949900,
      .0786015835790967672848009696255, .0607592853439515923447074066035,
      .0400790435798801049028166394764, .0175597301658759315159164387279};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x14, x14 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w14, w14 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 15;

  DataType x15[] = {
      .006003740989757285755217140706, .031363303799647047846120526145,
      .075896708294786391899675839613, .137791134319914976291906972693,
      .214513913695730576231386631373, .302924326461218315051396314509,
      .399402953001282738849685848302, .5,
      .600597046998717261150314151698, .697075673538781684948603685491,
      .785486086304269423768613368627, .862208865680085023708093027307,
      .924103291705213608100324160387, .968636696200352952153879473855,
      .993996259010242714244782859294};
  DataType w15[] = {
      .0153766209980586341773141960552, .0351830237440540623546337059413,
      .0535796102335859675059347752550, .0697853389630771572239023974620,
      .0831346029084969667766004305505, .0930805000077811055134002809275,
      .0992157426635557882280591632215, .101289120962780636440310099984,
      .0992157426635557882280591632215, .0930805000077811055134002809275,
      .0831346029084969667766004305505, .0697853389630771572239023974620,
      .0535796102335859675059347752550, .0351830237440540623546337059413,
      .0153766209980586341773141960552};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x15, x15 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w15, w15 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 16;

  DataType x16[] = {
      0.005299532504175033701922913275, 0.027712488463383711961005792235,
      0.067184398806084128059766051145, 0.122297795822498483052449402577,
      0.191061877798678125776664117976, 0.270991611171386306828790278508,
      0.359198224610370543384769749270, 0.452493745081181279907340332288,
      0.547506254918818720092659667713, 0.640801775389629456615230250730,
      0.729008388828613693171209721492, 0.808938122201321874223335882025,
      0.877702204177501516947550597425, 0.932815601193915871940233948856,
      0.972287511536616288038994207768, 0.994700467495824966298077086725};
  DataType w16[] = {
      0.013576229705877047425890286230, 0.031126761969323946431421918500,
      0.047579255841246392404962553800, 0.062314485627766936026238141095,
      0.074797994408288366040750865274, 0.084578259697501269094656039515,
      0.091301707522461794433381833985, 0.094725305227534248142698361604,
      0.094725305227534248142698361605, 0.091301707522461794433381833985,
      0.084578259697501269094656039515, 0.074797994408288366040750865275,
      0.062314485627766936026238141095, 0.047579255841246392404962553800,
      0.031126761969323946431421918495, 0.013576229705877047425890286228};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x16, x16 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w16, w16 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 17;

  DataType x17[] = {
      0.004712262342791332162282990030, 0.024662239115616119388641521050,
      0.059880423136507048938522152755, 0.109242998051599296537384972240,
      0.171164420391654617074848891679, 0.243654731456761516056876715685,
      0.324384118273061842351407241453, 0.410757909252076072074661253173,
      0.500000000000000000000000000000, 0.589242090747923927925338746827,
      0.675615881726938157648592758548, 0.756345268543238483943123284315,
      0.828835579608345382925151108322, 0.890757001948400703462615027760,
      0.940119576863492951061477847245, 0.975337760884383880611358478948,
      0.995287737657208667837717009971};
  DataType w17[] = {
      0.012074151434273965980055013144, 0.027729764686993600564720082679,
      0.042518074158589590441767685096, 0.055941923596701985547394192813,
      0.067568184234262736643159990850, 0.077022880538405144040715797400,
      0.084002051078225022254985331895, 0.088281352683496323162635495057,
      0.089723235178103262729132822131, 0.088281352683496323162635495057,
      0.084002051078225022254985331895, 0.077022880538405144040715797400,
      0.067568184234262736643159990850, 0.055941923596701985547394192815,
      0.042518074158589590441767685096, 0.027729764686993600564720082679,
      0.012074151434273965980055013145};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x17, x17 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w17, w17 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 18;

  DataType x18[] = {
      0.004217415789534526634991997645, 0.022088025214301122409402053535,
      0.053698766751222130396969704435, 0.098147520513738442158791272495,
      0.154156478469823396062554459355, 0.220114584463026232696064225735,
      0.294124419268578676982034103084, 0.374056887154247245205513572561,
      0.457612493479132349378869073532, 0.542387506520867650621130926468,
      0.625943112845752754794486427439, 0.705875580731421323017965896915,
      0.779885415536973767303935774265, 0.845843521530176603937445540645,
      0.901852479486261557841208727505, 0.946301233248777869603030295565,
      0.977911974785698877590597946465, 0.995782584210465473365008002355};
  DataType w18[] = {
      0.010808006763241655156671355133, 0.024857274447484898226667473100,
      0.038212865127444528264564838810, 0.050471022053143582781406992460,
      0.061277603355739230092259563400, 0.070321457335325325602365651876,
      0.077342337563132622462709001918, 0.082138241872916361493026888235,
      0.084571191481571795920328235068, 0.084571191481571795920328235070,
      0.082138241872916361493026888233, 0.077342337563132622462709001920,
      0.070321457335325325602365651875, 0.061277603355739230092259563400,
      0.050471022053143582781406992460, 0.038212865127444528264564838810,
      0.024857274447484898226667473102, 0.010808006763241655156671355133};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x18, x18 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w18, w18 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 19;

  DataType x19[] = {
      0.003796578078207798405491164875, 0.019895923932584984573610579655,
      0.048422048192591049178669535735, 0.088642671731428587510538756645,
      0.139516911332385310691452069588, 0.199727347669159488265180917527,
      0.267714629312019527141366425948, 0.341717950018185084004941335575,
      0.419820677179887312065951942130, 0.500000000000000000000000000000,
      0.580179322820112687934048057871, 0.658282049981814915995058664425,
      0.732285370687980472858633574050, 0.800272652330840511734819082473,
      0.860483088667614689308547930410, 0.911357328268571412489461243355,
      0.951577951807408950821330464266, 0.980104076067415015426389420344,
      0.996203421921792201594508835125};
  DataType w19[] = {
      0.009730894114863238518156020731, 0.022407113382849800166419078705,
      0.034522271368820613290354129003, 0.045745010811224999732231047060,
      0.055783322773666997358011950841, 0.064376981269668113837757892429,
      0.071303351086803305887873054720, 0.076383021032929833389427700450,
      0.079484421696977173824978219735, 0.080527224924391847989581812660,
      0.079484421696977173824978219733, 0.076383021032929833389427700449,
      0.071303351086803305887873054721, 0.064376981269668113837757892429,
      0.055783322773666997358011950840, 0.045745010811224999732231047060,
      0.034522271368820613290354129005, 0.022407113382849800166419078700,
      0.009730894114863238518156020730};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x19, x19 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w19, w19 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 20;

  DataType x20[] = {
      0.003435700407452537606938805765, 0.018014036361043104366166934400,
      0.043882785874337047066123779399, 0.080441514088890588302735469149,
      0.126834046769924603692847464822, 0.181973159636742487273581651887,
      0.244566499024586450997817974523, 0.313146955642290219663725911488,
      0.386107074429177460959751902315, 0.461736739433251333122679795300,
      0.538263260566748666877320204700, 0.613892925570822539040248097685,
      0.686853044357709780336274088513, 0.755433500975413549002182025480,
      0.818026840363257512726418348115, 0.873165953230075396307152535180,
      0.919558485911109411697264530850, 0.956117214125662952933876220600,
      0.981985963638956895633833065599, 0.996564299592547462393061194236};
  DataType w20[] = {
      0.008807003569576059155930981176, 0.020300714900193470665519976135,
      0.031336024167054531784753267595, 0.041638370788352374362379071611,
      0.050965059908620217518375067740, 0.059097265980759208656188688856,
      0.065844319224588313449247249874, 0.071048054659191025664649162535,
      0.074586493236301873393914368500, 0.076376693565362925349042165980,
      0.076376693565362925349042165978, 0.074586493236301873393914368500,
      0.071048054659191025664649162534, 0.065844319224588313449247249875,
      0.059097265980759208656188688855, 0.050965059908620217518375067740,
      0.041638370788352374362379071611, 0.031336024167054531784753267594,
      0.020300714900193470665519976138, 0.008807003569576059155930981175};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x20, x20 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w20, w20 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 21;

  DataType x21[] = {
      0.003123914689805249869878982030, 0.016386580716846852841688892545,
      0.039950332924799585604906433145, 0.073318317708341358176374680705,
      0.115780018262161045692061074345, 0.166430597901293840347016665005,
      0.224190582056390096470490601640, 0.287828939896280608213165555728,
      0.355989341598799451699603741970, 0.427219072919552454531484508831,
      0.500000000000000000000000000000, 0.572780927080447545468515491170,
      0.644010658401200548300396258033, 0.712171060103719391786834444272,
      0.775809417943609903529509398362, 0.833569402098706159652983334995,
      0.884219981737838954307938925655, 0.926681682291658641823625319295,
      0.960049667075200414395093566855, 0.983613419283153147158311107455,
      0.996876085310194750130121017970};
  DataType w21[] = {
      0.008008614128887166662112308430, 0.018476894885426246899975334150,
      0.028567212713428604141817913236, 0.038050056814189651008525826650,
      0.046722211728016930776644870557, 0.054398649583574188831737289035,
      0.060915708026864267097683588563, 0.066134469316668730890526287250,
      0.069943697395536577361066711935, 0.072262201994985029531913583275,
      0.073040566824845213595992573840, 0.072262201994985029531913583275,
      0.069943697395536577361066711935, 0.066134469316668730890526287250,
      0.060915708026864267097683588565, 0.054398649583574188831737289035,
      0.046722211728016930776644870557, 0.038050056814189651008525826650,
      0.028567212713428604141817913236, 0.018476894885426246899975334150,
      0.008008614128887166662112308430};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x21, x21 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w21, w21 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 22;

  DataType x22[] = {
      0.002852707258800353963484289420, 0.014969751082285636438024506615,
      0.036521613906412999739653530370, 0.067093711139849931731787181490,
      0.106091597010395918997861022295, 0.152756368406658609974655082119,
      0.206179798246544203520561536180, 0.265322081006621486796834644517,
      0.329032089553957887420926289787, 0.396069786655889357260576733040,
      0.465130363340138889393079101941, 0.534869636659861110606920898060,
      0.603930213344110642739423266960, 0.670967910446042112579073710214,
      0.734677918993378513203165355483, 0.793820201753455796479438463820,
      0.847243631593341390025344917880, 0.893908402989604081002138977705,
      0.932906288860150068268212818510, 0.963478386093587000260346469630,
      0.985030248917714363561975493385, 0.997147292741199646036515710580};
  DataType w22[] = {
      0.007313997649136100342495549025, 0.016887450792407077396651123435,
      0.026146667576341642970156025637, 0.034898234212260244047480709465,
      0.042970803108533863707221840685, 0.050207072221440482466039418916,
      0.056466148040269609196700303711, 0.061626188405256212142780493075,
      0.065586752393531185366482496265, 0.068270749173007585676286915616,
      0.069625936427815996687705124170, 0.069625936427815996687705124170,
      0.068270749173007585676286915616, 0.065586752393531185366482496265,
      0.061626188405256212142780493100, 0.056466148040269609196700303700,
      0.050207072221440482466039418900, 0.042970803108533863707221840685,
      0.034898234212260244047480709465, 0.026146667576341642970156025637,
      0.016887450792407077396651123435, 0.007313997649136100342495549025};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x22, x22 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w22, w22 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 23;

  DataType x23[] = {
      0.002615332501223938238037142275, 0.013728764390942384021987961590,
      0.033514456586991948825401505480, 0.061623820864779166310921557035,
      0.097555799190580053924440796500, 0.140669318434024902769187758126,
      0.190195062118176921807451344175, 0.245249261076996225155103476067,
      0.304849480984854584289255563560, 0.367932159514827534733065230859,
      0.433371587850766944534128658879, 0.500000000000000000000000000000,
      0.566628412149233055465871341120, 0.632067840485172465266934769140,
      0.695150519015145415710744436440, 0.754750738923003774844896523934,
      0.809804937881823078192548655825, 0.859330681565975097230812241875,
      0.902444200809419946075559203499, 0.938376179135220833689078442965,
      0.966485543413008051174598494520, 0.986271235609057615978012038410,
      0.997384667498776061761962857725};
  DataType w23[] = {
      0.006705929743570886040654746730, 0.015494002928489722155347109821,
      0.024018835865542334285820535816, 0.032116210704262926063584807580,
      0.039640705888359477461446262370, 0.046457883030017573738509308685,
      0.052446045732270705037043092508, 0.057498320111205682470821756467,
      0.061524542153364765233789200335, 0.064452861094041074989297669700,
      0.066231019702348308685821232352, 0.066827286093053087675728555273,
      0.066231019702348308685821232352, 0.064452861094041074989297669700,
      0.061524542153364765233789200335, 0.057498320111205682470821756470,
      0.052446045732270705037043092505, 0.046457883030017573738509308685,
      0.039640705888359477461446262371, 0.032116210704262926063584807580,
      0.024018835865542334285820535815, 0.015494002928489722155347109820,
      0.006705929743570886040654746730};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x23, x23 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w23, w23 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 24;

  DataType x24[] = {
      0.002406390001489319910001295150, 0.012635722014345250900804003495,
      0.030862723998633620738175499145, 0.056792236497799482893422829010,
      0.089999007013048539023025063665, 0.129937904210722817878085948450,
      0.175953174031512215373752106545, 0.227289264305580232170812191391,
      0.283103246186977430756457884044, 0.342478660151918312806603354340,
      0.404440566263191845420680089622, 0.467971553568697186957478458690,
      0.532028446431302813042521541310, 0.595559433736808154579319910380,
      0.657521339848081687193396645660, 0.716896753813022569243542115957,
      0.772710735694419767829187808610, 0.824046825968487784626247893456,
      0.870062095789277182121914051550, 0.910000992986951460976974936335,
      0.943207763502200517106577170991, 0.969137276001366379261824500855,
      0.987364277985654749099195996504, 0.997593609998510680089998704851};
  DataType w24[] = {
      0.006170614899993599773402833535, 0.014265694314466831590653907976,
      0.022138719408709903084301374105, 0.029649292457718390373183879250,
      0.036673240705540152867016807627, 0.043095080765976637958592601492,
      0.048809326052056944134940332232, 0.053722135057982817391288671224,
      0.057752834026862800676672241955, 0.060835236463901695602231576738,
      0.062918728173414148060687691255, 0.063969097673376078487028082610,
      0.063969097673376078487028082613, 0.062918728173414148060687691255,
      0.060835236463901695602231576740, 0.057752834026862800676672241953,
      0.053722135057982817391288671225, 0.048809326052056944134940332232,
      0.043095080765976637958592601490, 0.036673240705540152867016807627,
      0.029649292457718390373183879250, 0.022138719408709903084301374105,
      0.014265694314466831590653907976, 0.006170614899993599773402833535};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x24, x24 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w24, w24 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 25;

  DataType x25[] = {
      0.002221515104750951045607526555, 0.011668039270241244250842306760,
      0.028512714385512830292994415170, 0.052504001060862315574478996610,
      0.083278685619582999289489445655, 0.120370368481321184711358567398,
      0.163216815763265817757439683376, 0.211168534879388516138155079195,
      0.263498634277142519738908942496, 0.319413847095306081132089134935,
      0.378066558139505783977404818602, 0.438567653694644801806320090596,
      0.500000000000000000000000000000, 0.561432346305355198193679909405,
      0.621933441860494216022595181400, 0.680586152904693918867910865065,
      0.736501365722857480261091057505, 0.788831465120611483861844920805,
      0.836783184236734182242560316625, 0.879629631518678815288641432600,
      0.916721314380417000710510554345, 0.947495998939137684425521003390,
      0.971487285614487169707005584830, 0.988331960729758755749157693240,
      0.997778484895249048954392473445};
  DataType w25[] = {
      0.005696899250513143973951482055, 0.013177493307516068630950907650,
      0.020469578350653156327811743856, 0.027452347987917595962968445770,
      0.034019166906178458603593592830, 0.040070350167500509006617479835,
      0.045514130991481824905748610350, 0.050267974533525322101103445197,
      0.054259812237131826558046978525, 0.057429129572855824169662772935,
      0.059727881767892386114089063255, 0.061121221495155020844479759475,
      0.061588026863357725601951436540, 0.061121221495155020844479759475,
      0.059727881767892386114089063257, 0.057429129572855824169662772935,
      0.054259812237131826558046978525, 0.050267974533525322101103445200,
      0.045514130991481824905748610350, 0.040070350167500509006617479835,
      0.034019166906178458603593592829, 0.027452347987917595962968445770,
      0.020469578350653156327811743855, 0.013177493307516068630950907650,
      0.005696899250513143973951482055};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x25, x25 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w25, w25 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 26;

  DataType x26[] = {
      0.002057149427191535498391520340, 0.010807277021764504449709822845,
      0.026420466669142874932042358240, 0.048681069007846462891167200385,
      0.077277028605750990601246469265, 0.111807025589660571903516376379,
      0.151786369790021367568093043135, 0.196653853491190968384010626542,
      0.245779642587747141152148467635, 0.298474122438256846759461311450,
      0.353997580257021552428582308961, 0.411570589821554908015471125791,
      0.470384953285343396453140712401, 0.529615046714656603546859287600,
      0.588429410178445091984528874209, 0.646002419742978447571417691039,
      0.701525877561743153240538688550, 0.754220357412252858847851532365,
      0.803346146508809031615989373460, 0.848213630209978632431906956865,
      0.888192974410339428096483623620, 0.922722971394249009398753530735,
      0.951318930992153537108832799615, 0.973579533330857125067957641760,
      0.989192722978235495550290177155, 0.997942850572808464501608479660};
  DataType w26[] = {
      0.005275686308671503577825593845, 0.012208925546315954394807913760,
      0.018981191647181381975151570625, 0.025487912648573905999159950360,
      0.031637023164787417769726844954, 0.037342074882829872943537898050,
      0.042522947156742619605223882540, 0.047106900177957074231832441535,
      0.051029580547212711619207035127, 0.054235920264288295328289713364,
      0.056680908273159833274720359220, 0.058330221742648291022331253770,
      0.059160707639631138258185542850, 0.059160707639631138258185542850,
      0.058330221742648291022331253770, 0.056680908273159833274720359220,
      0.054235920264288295328289713365, 0.051029580547212711619207035130,
      0.047106900177957074231832441535, 0.042522947156742619605223882540,
      0.037342074882829872943537898050, 0.031637023164787417769726844955,
      0.025487912648573905999159950362, 0.018981191647181381975151570625,
      0.012208925546315954394807913760, 0.005275686308671503577825593845};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x26, x26 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w26, w26 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 27;

  DataType x27[] = {
      0.001910368555505716530556395810, 0.010038262019249388572063322170,
      0.024549721092647496574045984680, 0.045258839661254447849677490895,
      0.071896045990852754848631388645, 0.104114180464745886427801327945,
      0.141493263130288150352591894179, 0.183546014026752429536132681183,
      0.229724217710271552549849529220, 0.279425874124986559707012922156,
      0.332003048180745550134840482895, 0.386770317280231570571380446320,
      0.443013707195235016533552508065, 0.500000000000000000000000000000,
      0.556986292804764983466447491935, 0.613229682719768429428619553680,
      0.667996951819254449865159517104, 0.720574125875013440292987077845,
      0.770275782289728447450150470780, 0.816453985973247570463867318817,
      0.858506736869711849647408105820, 0.895885819535254113572198672055,
      0.928103954009147245151368611355, 0.954741160338745552150322509105,
      0.975450278907352503425954015320, 0.989961737980750611427936677830,
      0.998089631444494283469443604190};
  DataType w27[] = {
      0.004899498025647180130575027545, 0.011343115798090311598017103225,
      0.017648526878709855511289144650, 0.023724706260307531352048355057,
      0.029491768429916799555150416860, 0.034874411883122796492161444179,
      0.039802433886528885631537479505, 0.044211579271878475097161401427,
      0.048044363685014253782826323279, 0.051250818908872899335623855767,
      0.053789142894266593606081492214, 0.055626244178422596336081548020,
      0.056738173054482574310184974045, 0.057110433689478494522522868451,
      0.056738173054482574310184974046, 0.055626244178422596336081548020,
      0.053789142894266593606081492215, 0.051250818908872899335623855767,
      0.048044363685014253782826323280, 0.044211579271878475097161401450,
      0.039802433886528885631537479500, 0.034874411883122796492161444150,
      0.029491768429916799555150416860, 0.023724706260307531352048355057,
      0.017648526878709855511289144653, 0.011343115798090311598017103225,
      0.004899498025647180130575027545};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x27, x27 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w27, w27 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 28;

  DataType x28[] = {
      0.001778751213022775024781804760, 0.009348417314563623152720027095,
      0.022870359685530901372949080145, 0.042183486803933963065155288335,
      0.067053738712802475528872716310, 0.097179314541410414276057022285,
      0.132194560993184113985927744855, 0.171674452980567519390050911747,
      0.215139764094299140345998358322, 0.262062887522440869482794076167,
      0.311874241955460644889321395220, 0.363969186182410961161586821937,
      0.417715358933309614359264111055, 0.472460355057982864786741736329,
      0.527539644942017135213258263670, 0.582284641066690385640735888945,
      0.636030813817589038838413178065, 0.688125758044539355110678604780,
      0.737937112477559130517205923835, 0.784860235905700859654001641680,
      0.828325547019432480609949088255, 0.867805439006815886014072255145,
      0.902820685458589585723942977715, 0.932946261287197524471127283690,
      0.957816513196066036934844711665, 0.977129640314469098627050919855,
      0.990651582685436376847279972905, 0.998221248786977224975218195240};
  DataType w28[] = {
      0.004562141296547258869408076960, 0.010566056296385629875750190495,
      0.016450713891152189988815409586, 0.022136467379502113919793938827,
      0.027553672837858372715741459114, 0.032636461983499797896698783390,
      0.037323107117284389511965943587, 0.041556708614450609195198249120,
      0.045285872196516420471093015669, 0.048465328998964957925244503048,
      0.051056483789030384907108319253, 0.053027882961423208955208218500,
      0.054355596129147067626785759652, 0.055023506508237598141188132800,
      0.055023506508237598141188132801, 0.054355596129147067626785759650,
      0.053027882961423208955208218499, 0.051056483789030384907108319255,
      0.048465328998964957925244503050, 0.045285872196516420471093015669,
      0.041556708614450609195198249120, 0.037323107117284389511965943585,
      0.032636461983499797896698783388, 0.027553672837858372715741459115,
      0.022136467379502113919793938825, 0.016450713891152189988815409586,
      0.010566056296385629875750190495, 0.004562141296547258869408076960};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x28, x28 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w28, w28 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 29;

  DataType x29[] = {
      0.001660278869701706918404233725, 0.008727247369293412564536992105,
      0.021357202110956137100895981510, 0.039409883523470607453123281960,
      0.062681097539948604791103289370, 0.090907256192373777505213892710,
      0.123768574132761433043694961395, 0.160892731198656742421907497304,
      0.201859101430886089810206894405, 0.246203522437886178948686040186,
      0.293423555912995668054646706984, 0.342984181066180032525902038405,
      0.394323856916999462746812135549, 0.446860884933660384914508803785,
      0.500000000000000000000000000000, 0.553139115066339615085491196215,
      0.605676143083000537253187864452, 0.657015818933819967474097961596,
      0.706576444087004331945353293015, 0.753796477562113821051313959815,
      0.798140898569113910189793105595, 0.839107268801343257578092502695,
      0.876231425867238566956305038605, 0.909092743807626222494786107290,
      0.937318902460051395208896710630, 0.960590116476529392546876718040,
      0.978642797889043862899104018490, 0.991272752630706587435463007893,
      0.998339721130298293081595766275};
  DataType w29[] = {
      0.004258451939373204827131906650, 0.009866042528061352991929900820,
      0.015370246101046811322204262688, 0.020701031259341418052415005055,
      0.025797413451248961956297190590, 0.030601545328539569271054924012,
      0.035058966627525639284790743475, 0.039119163567881891914072444330,
      0.042736128683086263772672424650, 0.045868878569629381673983205540,
      0.048481917047204303150950037440, 0.050545636879957483060910273455,
      0.052036655038864686956664235645, 0.052938077548660470703295663925,
      0.053239690859157122123255563455, 0.052938077548660470703295663925,
      0.052036655038864686956664235643, 0.050545636879957483060910273455,
      0.048481917047204303150950037442, 0.045868878569629381673983205540,
      0.042736128683086263772672424650, 0.039119163567881891914072444330,
      0.035058966627525639284790743475, 0.030601545328539569271054924012,
      0.025797413451248961956297190590, 0.020701031259341418052415005057,
      0.015370246101046811322204262688, 0.009866042528061352991929900820,
      0.004258451939373204827131906650};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x29, x29 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w29, w29 + size);

  index_field_[size] = cntr;
  cntr++;

  // ---------------------------------------------
  size = 30;

  DataType x30[] = {
      0.001553257962675229864184974540, 0.008165938360126395014983709195,
      0.019989067515846243891564487210, 0.036899976285362837060337861460,
      0.058719732103973659228441768735, 0.085217118808615801278550940135,
      0.116111283947586902541011329515, 0.151074752603342101533853805987,
      0.189736908505378569429761221785, 0.231687925928990050367915103345,
      0.276483115230955411609695049839, 0.323647637234560943264481396455,
      0.372681536916055076780097435091, 0.423065043195708226518102663629,
      0.474264078722341152083487393417, 0.525735921277658847916512606584,
      0.576934956804291773481897336372, 0.627318463083944923219902564909,
      0.676352362765439056735518603545, 0.723516884769044588390304950160,
      0.768312074071009949632084896656, 0.810263091494621430570238778215,
      0.848925247396657898466146194015, 0.883888716052413097458988670485,
      0.914782881191384198721449059865, 0.941280267896026340771558231265,
      0.963100023714637162939662138540, 0.980010932484153756108435512790,
      0.991834061639873604985016290805, 0.998446742037324770135815025460};
  DataType w30[] = {
      0.003984096248083302807732941735, 0.009233234155545479571151065956,
      0.014392353941661684674859589805, 0.019399596284813524798400968225,
      0.024201336415297026451469070211, 0.028746578108809533240860844701,
      0.032987114941090247564064257558, 0.036877987368852603134121925010,
      0.040377947614710107677347469230, 0.043449893600541489901193765358,
      0.046061261118893064358816353545, 0.048184368587322129819734313175,
      0.049796710293397633531390141052, 0.050881194874202752298214476085,
      0.051426326446779420170642818353, 0.051426326446779420170642818355,
      0.050881194874202752298214476085, 0.049796710293397633531390141050,
      0.048184368587322129819734313175, 0.046061261118893064358816353545,
      0.043449893600541489901193765358, 0.040377947614710107677347469230,
      0.036877987368852603134121925010, 0.032987114941090247564064257550,
      0.028746578108809533240860844700, 0.024201336415297026451469070210,
      0.019399596284813524798400968223, 0.014392353941661684674859589806,
      0.009233234155545479571151065956, 0.003984096248083302807732941735};

  x_[cntr].reserve(size);
  x_[cntr].insert(x_[cntr].begin(), x30, x30 + size);
  y_[cntr].resize(size, 0.0);
  z_[cntr].resize(size, 0.0);
  w_[cntr].reserve(size);
  w_[cntr].insert(w_[cntr].begin(), w30, w30 + size);

  index_field_[size] = cntr;
  cntr++;
}

template < class DataType >
QuadratureGaussLine< DataType > *
QuadratureGaussLine< DataType >::clone() const {
  return new QuadratureGaussLine< DataType >(*this);
}

// template instanciation
template class QuadratureGaussLine< double >;
template class QuadratureGaussLine< float >;

} // namespace hiflow
